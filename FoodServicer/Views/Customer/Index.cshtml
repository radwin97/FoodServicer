@model FoodServicer.ViewModel.CustomerSearchViewModel

@{
    ViewData["Title"] = "Index";
}

<div class="row">
    <div class="col-lg-12">
        <h1 class="page-header">Search Customers</h1>
    </div>
</div>
<div class="panel">
    <div class="row">
        <div class="col-lg-12">
            <div class="panel-body">
                    @using (Html.BeginForm("Search", "Customer", null, FormMethod.Post, true, new { @class = "form-inline", id = "customer-search-form", role = "form" }))
                    {
                        @Html.AntiForgeryToken()

                        <div class="form-group col-lg-offset-3">
                            @Html.LabelFor(x => x.FirstName, new {  @class = "sr-only" })
                            @Html.TextBoxFor(x => x.FirstName, new { @class = "form-control", placeholder = "First Name" })
                            @Html.ValidationMessageFor(x => x.FirstName)
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(x => x.LastName, new { @class = "sr-only" })
                            @Html.TextBoxFor(x => x.LastName, new { @class = "form-control", placeholder = "Last Name" })
                            @Html.ValidationMessageFor(x => x.LastName)
                        </div>

                        @*<div class="form-group">
                            @Html.LabelFor(x => x.EmailAddress)
                            @Html.TextBoxFor(x => x.EmailAddress, new { @class = "form-control" })
                            @Html.ValidationMessageFor(x => x.EmailAddress)
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(x => x.PhoneNumber)
                            @Html.TextBoxFor(x => x.PhoneNumber, new { @class = "form-control" })
                            @Html.ValidationMessageFor(x => x.PhoneNumber)
                        </div>*@

                        <button type="submit" class="btn btn-primary mb-2">Search</button>
                        <input type="button" value="Clear" id="reset-button"class="btn btn-link mb-2" />
                    }
            </div>
        </div>
    </div>
</div>
<div class="panel">
    <div class="row">
        <div class="col-lg-12">
            <div class="panel-body">
                <div class="col-lg-12">
                    <table id="search-results" class="table table-striped table-bordered" style="width:100%;">
                        <thead>
                            <tr>
                                <th>Id</th>
                                <th>First Name</th>
                                <th>Middle Name</th>
                                <th>Last Name</th>
                                <th>Suffix</th>
                                <th>Name</th>
                                <th>Primary Address</th>
                                <th>Primary Phone</th>
                                <th>Primary Email</th>
                                <td></td>
                            </tr>
                        </thead>
                        <tbody>
                            @if (Model.HasCustomers)
                            {
                                @Html.DisplayFor(x => x.Customers)
                            }
                            </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

@section Styles{
    <link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/v/bs/dt-1.10.18/b-1.5.4/b-flash-1.5.4/b-print-1.5.4/r-2.2.2/datatables.min.css" />
}

@section Scripts{
    <script type="text/javascript" src="https://cdn.datatables.net/v/bs/dt-1.10.18/b-1.5.4/b-flash-1.5.4/b-print-1.5.4/r-2.2.2/datatables.min.js"></script>

    <script type="text/javascript">
        $(document).ready(function () {
            $('#search-results').DataTable(
                {
                    "columnDefs": [
                        {
                            "targets": [0,1,2,3,4],
                            "visible": false
                        },
                        {
                            "targets": [9],
                            "sortable": false,
                            "width" : 70
                        }
                    ],
                    "searching": false,
                    "lengthChange": false
                });

            $('#reset-button').click(function () {
                    $('form input[type=text]').val("");
                    $('#search-results').DataTable().clear().draw();
            });

            $('.edit-button').click(function () {
                var id = $('#search-results').DataTable().row($(this).closest('tr')).data()[0];
                var path = "@Url.Action("Edit", "Customer")";
                var date = new Date();
                var tabId = 'edit' + date.getMilliseconds;
                window.open(path + "?id=" + id, tabId);
            });

            $('.view-button').click(function () {
                var id = $('#search-results').DataTable().row($(this).closest('tr')).data()[0];
                var path = "@Url.Action("Detail", "Customer")";
                var date = new Date();
                var tabId = 'view' + date.getMilliseconds;
                window.open(path + "?id=" + id, tabId);
            });
        });
    </script>
}
